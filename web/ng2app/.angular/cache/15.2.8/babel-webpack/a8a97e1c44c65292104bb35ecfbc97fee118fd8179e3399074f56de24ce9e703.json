{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ModalService {\n  constructor() {\n    this.data = new BehaviorSubject({});\n    this.data$ = this.data.asObservable();\n  }\n  sendData(data) {\n    this.data.next(data);\n  }\n  toggleModal(modal, event) {\n    return new Promise(resolve => {\n      event === 'open' ? modal.nativeElement.classList.add('modal-init') : modal.nativeElement.classList.remove('modal-show');\n      modal.nativeElement.classList.add('modal-init');\n      resolve(modal);\n    }).then(modal => {\n      setTimeout(() => {\n        event === 'open' ? modal.nativeElement.classList.add('modal-show') : modal.nativeElement.classList.remove('modal-init');\n      }, event === 'open' ? 100 : 300);\n    });\n  }\n}\nModalService.ɵfac = function ModalService_Factory(t) {\n  return new (t || ModalService)();\n};\nModalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ModalService,\n  factory: ModalService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAOlD,OAAM,MAAOC,YAAY;EAKvBC;IAHQ,SAAI,GAAyB,IAAIF,eAAe,CAAM,EAAE,CAAC;IAC1D,UAAK,GAAoB,IAAI,CAACG,IAAI,CAACC,YAAY,EAAE;EAEzC;EAEfC,QAAQ,CAACF,IAAS;IAChB,IAAI,CAACA,IAAI,CAACG,IAAI,CAACH,IAAI,CAAC;EACtB;EAEAI,WAAW,CAACC,KAAU,EAAEC,KAAiB;IACvC,OAAO,IAAIC,OAAO,CAAEC,OAAY,IAAI;MAClCF,KAAK,KAAK,MAAM,GAAGD,KAAK,CAACI,aAAa,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC,GAAGN,KAAK,CAACI,aAAa,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;MACvHP,KAAK,CAACI,aAAa,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MAC/CH,OAAO,CAACH,KAAK,CAAC;IAChB,CAAC,CAAC,CAACQ,IAAI,CAAER,KAAU,IAAI;MACrBS,UAAU,CAAC,MAAK;QACdR,KAAK,KAAK,MAAM,GAAGD,KAAK,CAACI,aAAa,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC,GAAGN,KAAK,CAACI,aAAa,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;MACzH,CAAC,EAAEN,KAAK,KAAK,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;;AArBWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAiB,SAAZjB,YAAY;EAAAkB,YAFX;AAAM","names":["BehaviorSubject","ModalService","constructor","data","asObservable","sendData","next","toggleModal","modal","event","Promise","resolve","nativeElement","classList","add","remove","then","setTimeout","factory","providedIn"],"sourceRoot":"","sources":["/home/dima/myProjects/heavyReviewBackEnd/web/ng2app/src/app/services/modal.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\ntype modalEvent = \"open\" | \"close\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  private data: BehaviorSubject<any> = new BehaviorSubject<any>({});\n  public data$: Observable<any> = this.data.asObservable();\n\n  constructor() {}\n\n  sendData(data: any) {\n    this.data.next(data)\n  }\n\n  toggleModal(modal: any, event: modalEvent) {\n    return new Promise((resolve: any) => {\n      event === 'open' ? modal.nativeElement.classList.add('modal-init') : modal.nativeElement.classList.remove('modal-show')\n      modal.nativeElement.classList.add('modal-init')\n      resolve(modal)\n    }).then((modal: any) => {\n      setTimeout(() => {\n        event === 'open' ? modal.nativeElement.classList.add('modal-show') : modal.nativeElement.classList.remove('modal-init')\n      }, event === 'open' ? 100 : 300);\n    })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}