{"ast":null,"code":"import { EMPTY, catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/api.service\";\nexport class AlbumResolver {\n  constructor(router, apiService) {\n    this.router = router;\n    this.apiService = apiService;\n    this.data = {};\n  }\n  resolve(route, state) {\n    this.data.id = route.params?.['id'];\n    return this.apiService.get('album/get', this.data).pipe(catchError(() => {\n      this.router.navigate(['']);\n      return EMPTY;\n    }));\n  }\n}\nAlbumResolver.ɵfac = function AlbumResolver_Factory(t) {\n  return new (t || AlbumResolver)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ApiService));\n};\nAlbumResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AlbumResolver,\n  factory: AlbumResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAMA,SAASA,KAAK,EAAcC,UAAU,QAAY,MAAM;;;;AAMxD,OAAM,MAAOC,aAAa;EAGxBC,YACUC,MAAc,EACdC,UAAsB;IADtB,WAAM,GAAND,MAAM;IACN,eAAU,GAAVC,UAAU;IAJb,SAAI,GAAQ,EAAE;EAKf;EAENC,OAAO,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,IAAI,CAACC,IAAI,CAACC,EAAE,GAAGH,KAAK,CAACI,MAAM,GAAG,IAAI,CAAC;IACnC,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAAC,WAAW,EAAE,IAAI,CAACH,IAAI,CAAC,CAACI,IAAI,CACrDZ,UAAU,CAAC,MAAK;MACd,IAAI,CAACG,MAAM,CAACU,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1B,OAAOd,KAAK;IACd,CAAC,CAAC,CACH;EACH;;AAhBWE,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAa,SAAbb,aAAa;EAAAc,YAFZ;AAAM","names":["EMPTY","catchError","AlbumResolver","constructor","router","apiService","resolve","route","state","data","id","params","get","pipe","navigate","factory","providedIn"],"sourceRoot":"","sources":["/home/dima/myProjects/heavyReviewBackEnd/web/ng2app/src/app/resolvers/album.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { EMPTY, Observable, catchError, of } from 'rxjs';\nimport { ApiService } from '../services/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlbumResolver implements Resolve<boolean> {\n  public data: any = {}\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService\n    ) { }\n    \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n    this.data.id = route.params?.['id'] \n    return this.apiService.get('album/get', this.data).pipe(\n      catchError(() => {  \n        this.router.navigate([''])\n        return EMPTY\n      })\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}